
PLAY [127.0.0.1] ***************************************************************

PLAY [ansible_provisioners] ****************************************************

TASK [Gathering Facts] *********************************************************
ok: [localhost]

TASK [install ajv-cli] *********************************************************
ok: [localhost]

TASK [set_fact] ****************************************************************
ok: [localhost]

TASK [Ensures build dir exists] ************************************************

TASK [check/setup : check if dir exists or not] ********************************
ok: [localhost]

TASK [check/setup : Ensures dir exists] ****************************************
skipping: [localhost]

TASK [check/setup : Check if Kubernetes-auth already created for Organization] ***
skipping: [localhost]

TASK [check/setup : Check if policy exists] ************************************
skipping: [localhost]

TASK [check/setup : Check docker cred exists] **********************************
skipping: [localhost]

TASK [create tempNetwork yaml file] ********************************************
ok: [localhost]

TASK [run schema validator on network.yaml] ************************************
changed: [localhost]

PLAY [ansible_provisioners] ****************************************************

TASK [Gathering Facts] *********************************************************
ok: [localhost]

TASK [include_role : setup/kubectl] ********************************************

TASK [setup/kubectl : register temporary directory] ****************************
changed: [localhost]

TASK [setup/kubectl : check kubectl] *******************************************
ok: [localhost]

TASK [setup/kubectl : Download kubectl binary] *********************************
skipping: [localhost]

TASK [setup/kubectl : Unarchive kubernetes-client] *****************************
skipping: [localhost]

TASK [setup/kubectl : create bin directory] ************************************
skipping: [localhost]

TASK [setup/kubectl : Copy kubectl binary to destination directory] ************
skipping: [localhost] => (item=kubectl) 

TASK [setup/kubectl : Test kubectl installation] *******************************
ok: [localhost]

TASK [setup/kubectl : Changing the current context namespace to default] *******
changed: [localhost]

TASK [setup/kubectl : register temporary directory] ****************************
changed: [localhost]

TASK [setup/kubectl : check kubectl] *******************************************
ok: [localhost]

TASK [setup/kubectl : Download kubectl binary] *********************************
skipping: [localhost]

TASK [setup/kubectl : Unarchive kubernetes-client] *****************************
skipping: [localhost]

TASK [setup/kubectl : create bin directory] ************************************
skipping: [localhost]

TASK [setup/kubectl : Copy kubectl binary to destination directory] ************
skipping: [localhost] => (item=kubectl) 

TASK [setup/kubectl : Test kubectl installation] *******************************
ok: [localhost]

TASK [setup/kubectl : Changing the current context namespace to default] *******
changed: [localhost]

TASK [setup/kubectl : register temporary directory] ****************************
changed: [localhost]

TASK [setup/kubectl : check kubectl] *******************************************
ok: [localhost]

TASK [setup/kubectl : Download kubectl binary] *********************************
skipping: [localhost]

TASK [setup/kubectl : Unarchive kubernetes-client] *****************************
skipping: [localhost]

TASK [setup/kubectl : create bin directory] ************************************
skipping: [localhost]

TASK [setup/kubectl : Copy kubectl binary to destination directory] ************
skipping: [localhost] => (item=kubectl) 

TASK [setup/kubectl : Test kubectl installation] *******************************
ok: [localhost]

TASK [setup/kubectl : Changing the current context namespace to default] *******
changed: [localhost]

TASK [setup/kubectl : register temporary directory] ****************************
changed: [localhost]

TASK [setup/kubectl : check kubectl] *******************************************
ok: [localhost]

TASK [setup/kubectl : Download kubectl binary] *********************************
skipping: [localhost]

TASK [setup/kubectl : Unarchive kubernetes-client] *****************************
skipping: [localhost]

TASK [setup/kubectl : create bin directory] ************************************
skipping: [localhost]

TASK [setup/kubectl : Copy kubectl binary to destination directory] ************
skipping: [localhost] => (item=kubectl) 

TASK [setup/kubectl : Test kubectl installation] *******************************
ok: [localhost]

TASK [setup/kubectl : Changing the current context namespace to default] *******
changed: [localhost]

TASK [setup/kubectl : register temporary directory] ****************************
changed: [localhost]

TASK [setup/kubectl : check kubectl] *******************************************
ok: [localhost]

TASK [setup/kubectl : Download kubectl binary] *********************************
skipping: [localhost]

TASK [setup/kubectl : Unarchive kubernetes-client] *****************************
skipping: [localhost]

TASK [setup/kubectl : create bin directory] ************************************
skipping: [localhost]

TASK [setup/kubectl : Copy kubectl binary to destination directory] ************
skipping: [localhost] => (item=kubectl) 

TASK [setup/kubectl : Test kubectl installation] *******************************
ok: [localhost]

TASK [setup/kubectl : Changing the current context namespace to default] *******
changed: [localhost]

TASK [include_role : setup/helm] ***********************************************

TASK [setup/helm : register temporary directory] *******************************
changed: [localhost]

TASK [setup/helm : check helm] *************************************************
ok: [localhost]

TASK [setup/helm : Install helm] ***********************************************
skipping: [localhost]

TASK [setup/helm : Unzip helm archive] *****************************************
skipping: [localhost]

TASK [create bin directory] ****************************************************
skipping: [localhost]

TASK [setup/helm : Move helm binaries] *****************************************
skipping: [localhost] => (item=helm) 

TASK [setup/helm : Test helm installation] *************************************
ok: [localhost]

TASK [setup/helm : register temporary directory] *******************************
changed: [localhost]

TASK [setup/helm : check helm] *************************************************
ok: [localhost]

TASK [setup/helm : Install helm] ***********************************************
skipping: [localhost]

TASK [setup/helm : Unzip helm archive] *****************************************
skipping: [localhost]

TASK [create bin directory] ****************************************************
skipping: [localhost]

TASK [setup/helm : Move helm binaries] *****************************************
skipping: [localhost] => (item=helm) 

TASK [setup/helm : Test helm installation] *************************************
ok: [localhost]

TASK [setup/helm : register temporary directory] *******************************
changed: [localhost]

TASK [setup/helm : check helm] *************************************************
ok: [localhost]

TASK [setup/helm : Install helm] ***********************************************
skipping: [localhost]

TASK [setup/helm : Unzip helm archive] *****************************************
skipping: [localhost]

TASK [create bin directory] ****************************************************
skipping: [localhost]

TASK [setup/helm : Move helm binaries] *****************************************
skipping: [localhost] => (item=helm) 

TASK [setup/helm : Test helm installation] *************************************
ok: [localhost]

TASK [setup/helm : register temporary directory] *******************************
changed: [localhost]

TASK [setup/helm : check helm] *************************************************
ok: [localhost]

TASK [setup/helm : Install helm] ***********************************************
skipping: [localhost]

TASK [setup/helm : Unzip helm archive] *****************************************
skipping: [localhost]

TASK [create bin directory] ****************************************************
skipping: [localhost]

TASK [setup/helm : Move helm binaries] *****************************************
skipping: [localhost] => (item=helm) 

TASK [setup/helm : Test helm installation] *************************************
ok: [localhost]

TASK [setup/helm : register temporary directory] *******************************
changed: [localhost]

TASK [setup/helm : check helm] *************************************************
ok: [localhost]

TASK [setup/helm : Install helm] ***********************************************
skipping: [localhost]

TASK [setup/helm : Unzip helm archive] *****************************************
skipping: [localhost]

TASK [create bin directory] ****************************************************
skipping: [localhost]

TASK [setup/helm : Move helm binaries] *****************************************
skipping: [localhost] => (item=helm) 

TASK [setup/helm : Test helm installation] *************************************
ok: [localhost]

TASK [include_role : setup/vault] **********************************************

TASK [setup/vault : register temporary directory] ******************************
changed: [localhost]

TASK [setup/vault : check vault] ***********************************************
ok: [localhost]

TASK [setup/vault : Install vault client] **************************************
skipping: [localhost]

TASK [setup/vault : create bin directory] **************************************
skipping: [localhost]

TASK [setup/vault : Unzip vault archive] ***************************************
skipping: [localhost] => (item=vault) 

TASK [setup/vault : Test vault installation] ***********************************
ok: [localhost]

TASK [include_role : setup/aws-cli] ********************************************
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'org1ambassador.blockchaincloudpoc.com', 'org_status': 'new', 'fabric_console': 'enabled', 'ca_data': {'url': 'ca.supplychain-net.org1ambassador.blockchaincloudpoc.com:8443', 'certificate': 'file/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'eu-west-1', 'context': 'project-49ce1150-besu-cluster', 'config_file': '/home/ubuntu/.kube/config'}, 'vault': {'url': 'http://127.0.0.1:9000', 'root_token': 's.NQN6bn4oN7ScNuLnwxB7USgx', 'secret_path': 'secret'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'https://github.com/hwcho/bevel.git', 'branch': 'develop', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/hwcho/bevel.git', 'username': 'hwcho', 'password': 'git_access_token', 'email': 'hyewoncho17@gmail.com', 'private_key': '/home/ubuntu/gitops/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net.org1ambassador.blockchaincloudpoc.com', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'kafka', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'kafka', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'kafka', 'grpc': {'port': 7050}}]}}) 
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'peer', 'external_url_suffix': 'org2ambassador.blockchaincloudpoc.com', 'org_status': 'new', 'fabric_console': 'enabled', 'ca_data': {'url': 'ca.manufacturer-net.org2ambassador.blockchaincloudpoc.com:8443', 'certificate': 'file/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'eu-west-1', 'context': 'project-49ce1150-besu-cluster', 'config_file': '/home/ubuntu/.kube/config'}, 'vault': {'url': 'http://127.0.0.1:9000', 'root_token': 's.NQN6bn4oN7ScNuLnwxB7USgx', 'secret_path': 'secret'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'https://github.com/hwcho/bevel.git', 'branch': 'develop', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/hwcho/bevel.git', 'username': 'hwcho', 'password': 'git_access_token', 'email': 'hyewoncho17@gmail.com', 'private_key': '/home/ubuntu/gitops/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net.org2ambassador.blockchaincloudpoc.com', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net.org3ambassador.blockchaincloudpoc.com:8443', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'chaincode_name', 'version': '1', 'maindirectory': 'chaincode_main', 'lang': 'golang', 'repository': {'username': 'hwcho', 'password': 'git_access_token', 'url': 'github.com/hwcho/bevel.git', 'branch': 'develop', 'path': 'chaincode_src'}, 'arguments': 'chaincode_args', 'endorsements': ''}}]}}) 
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'org3ambassador.blockchaincloudpoc.com', 'org_status': 'new', 'fabric_console': 'disabled', 'ca_data': {'url': 'ca.carrier-net.org3ambassador.blockchaincloudpoc.com:8443', 'certificate': 'file/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'eu-west-1', 'context': 'project-49ce1150-besu-cluster', 'config_file': '/home/ubuntu/.kube/config'}, 'vault': {'url': 'http://127.0.0.1:9000', 'root_token': 's.NQN6bn4oN7ScNuLnwxB7USgx', 'secret_path': 'secret'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'https://github.com/hwcho/bevel.git', 'branch': 'develop', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/hwcho/bevel.git', 'username': 'hwcho', 'password': 'git_access_token', 'email': 'hyewoncho17@gmail.com', 'private_key': '/home/ubuntu/gitops/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net.org3ambassador.blockchaincloudpoc.com', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.org3ambassador.blockchaincloudpoc.com:8443', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'chaincode_name', 'version': '1', 'maindirectory': 'chaincode_main', 'lang': 'golang', 'repository': {'username': 'hwcho', 'password': 'git_access_token', 'url': 'github.com/hwcho/bevel.git', 'branch': 'develop', 'path': 'chaincode_src'}, 'arguments': 'chaincode_args', 'endorsements': ''}}]}}) 
skipping: [localhost] => (item={'organization': None, 'name': 'store', 'country': 'US', 'state': 'New York', 'location': 'New York', 'subject': 'O=Store,OU=Store,L=40.73/-74/New York,C=US', 'type': 'peer', 'external_url_suffix': 'org3ambassador.blockchaincloudpoc.com', 'org_status': 'new', 'fabric_console': 'disabled', 'ca_data': {'url': 'ca.store-net.org3ambassador.blockchaincloudpoc.com:8443', 'certificate': 'file/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'eu-west-1', 'context': 'project-49ce1150-besu-cluster', 'config_file': '/home/ubuntu/.kube/config'}, 'vault': {'url': 'http://127.0.0.1:9000', 'root_token': 's.NQN6bn4oN7ScNuLnwxB7USgx', 'secret_path': 'secret'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'https://github.com/hwcho/bevel.git', 'branch': 'develop', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/hwcho/bevel.git', 'username': 'hwcho', 'password': 'git_access_token', 'email': 'hyewoncho17@gmail.com', 'private_key': '/home/ubuntu/gitops/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=US/ST=New York/L=New York/O=Store/CN=ca.store-net.org3ambassador.blockchaincloudpoc.com', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.store-net:7051', 'peerAddress': 'peer0.store-net.org3ambassador.blockchaincloudpoc.com:8443', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'chaincode_name', 'version': '1', 'maindirectory': 'chaincode_main', 'lang': 'golang', 'repository': {'username': 'hwcho', 'password': 'git_access_token', 'url': 'github.com/hwcho/bevel.git', 'branch': 'develop', 'path': 'chaincode_src'}, 'arguments': 'chaincode_args', 'endorsements': ''}}]}}) 
skipping: [localhost] => (item={'organization': None, 'name': 'warehouse', 'country': 'US', 'state': 'Massachusetts', 'location': 'Boston', 'subject': 'O=Warehouse,OU=Warehouse,L=42.36/-71.06/Boston,C=US', 'type': 'peer', 'external_url_suffix': 'org2ambassador.blockchaincloudpoc.com', 'org_status': 'new', 'fabric_console': 'disabled', 'ca_data': {'url': 'ca.warehouse-net.org2ambassador.blockchaincloudpoc.com:8443', 'certificate': '/file/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'eu-west-1', 'context': 'project-49ce1150-besu-cluster', 'config_file': '/home/ubuntu/.kube/config'}, 'vault': {'url': 'http://127.0.0.1:9000', 'root_token': 's.NQN6bn4oN7ScNuLnwxB7USgx', 'secret_path': 'secret'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'https://github.com/hwcho/bevel.git', 'branch': 'develop', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/hwcho/bevel.git', 'username': 'hwcho', 'password': 'git_access_token', 'email': 'hyewoncho17@gmail.com', 'private_key': '/home/ubuntu/gitops/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=US/ST=Massachusetts/L=Boston/O=Warehouse/CN=ca.warehouse-net.org2ambassador.blockchaincloudpoc.com', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.warehouse-net:7051', 'peerAddress': 'peer0.warehouse-net.org3ambassador.blockchaincloudpoc.com:8443', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'chaincode_name', 'version': '1', 'maindirectory': 'chaincode_main', 'lang': 'golang', 'repository': {'username': 'hwcho', 'password': 'git_access_token', 'url': 'github.com/hwcho/bevel.git', 'branch': 'develop', 'path': 'chaincode_src'}, 'arguments': 'chaincode_args', 'endorsements': ''}}]}}) 

TASK [include_role : setup/aws-auth] *******************************************
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'org1ambassador.blockchaincloudpoc.com', 'org_status': 'new', 'fabric_console': 'enabled', 'ca_data': {'url': 'ca.supplychain-net.org1ambassador.blockchaincloudpoc.com:8443', 'certificate': 'file/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'eu-west-1', 'context': 'project-49ce1150-besu-cluster', 'config_file': '/home/ubuntu/.kube/config'}, 'vault': {'url': 'http://127.0.0.1:9000', 'root_token': 's.NQN6bn4oN7ScNuLnwxB7USgx', 'secret_path': 'secret'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'https://github.com/hwcho/bevel.git', 'branch': 'develop', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/hwcho/bevel.git', 'username': 'hwcho', 'password': 'git_access_token', 'email': 'hyewoncho17@gmail.com', 'private_key': '/home/ubuntu/gitops/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net.org1ambassador.blockchaincloudpoc.com', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'kafka', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'kafka', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'kafka', 'grpc': {'port': 7050}}]}}) 
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'peer', 'external_url_suffix': 'org2ambassador.blockchaincloudpoc.com', 'org_status': 'new', 'fabric_console': 'enabled', 'ca_data': {'url': 'ca.manufacturer-net.org2ambassador.blockchaincloudpoc.com:8443', 'certificate': 'file/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'eu-west-1', 'context': 'project-49ce1150-besu-cluster', 'config_file': '/home/ubuntu/.kube/config'}, 'vault': {'url': 'http://127.0.0.1:9000', 'root_token': 's.NQN6bn4oN7ScNuLnwxB7USgx', 'secret_path': 'secret'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'https://github.com/hwcho/bevel.git', 'branch': 'develop', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/hwcho/bevel.git', 'username': 'hwcho', 'password': 'git_access_token', 'email': 'hyewoncho17@gmail.com', 'private_key': '/home/ubuntu/gitops/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net.org2ambassador.blockchaincloudpoc.com', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net.org3ambassador.blockchaincloudpoc.com:8443', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'chaincode_name', 'version': '1', 'maindirectory': 'chaincode_main', 'lang': 'golang', 'repository': {'username': 'hwcho', 'password': 'git_access_token', 'url': 'github.com/hwcho/bevel.git', 'branch': 'develop', 'path': 'chaincode_src'}, 'arguments': 'chaincode_args', 'endorsements': ''}}]}}) 
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'org3ambassador.blockchaincloudpoc.com', 'org_status': 'new', 'fabric_console': 'disabled', 'ca_data': {'url': 'ca.carrier-net.org3ambassador.blockchaincloudpoc.com:8443', 'certificate': 'file/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'eu-west-1', 'context': 'project-49ce1150-besu-cluster', 'config_file': '/home/ubuntu/.kube/config'}, 'vault': {'url': 'http://127.0.0.1:9000', 'root_token': 's.NQN6bn4oN7ScNuLnwxB7USgx', 'secret_path': 'secret'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'https://github.com/hwcho/bevel.git', 'branch': 'develop', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/hwcho/bevel.git', 'username': 'hwcho', 'password': 'git_access_token', 'email': 'hyewoncho17@gmail.com', 'private_key': '/home/ubuntu/gitops/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net.org3ambassador.blockchaincloudpoc.com', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.org3ambassador.blockchaincloudpoc.com:8443', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'chaincode_name', 'version': '1', 'maindirectory': 'chaincode_main', 'lang': 'golang', 'repository': {'username': 'hwcho', 'password': 'git_access_token', 'url': 'github.com/hwcho/bevel.git', 'branch': 'develop', 'path': 'chaincode_src'}, 'arguments': 'chaincode_args', 'endorsements': ''}}]}}) 
skipping: [localhost] => (item={'organization': None, 'name': 'store', 'country': 'US', 'state': 'New York', 'location': 'New York', 'subject': 'O=Store,OU=Store,L=40.73/-74/New York,C=US', 'type': 'peer', 'external_url_suffix': 'org3ambassador.blockchaincloudpoc.com', 'org_status': 'new', 'fabric_console': 'disabled', 'ca_data': {'url': 'ca.store-net.org3ambassador.blockchaincloudpoc.com:8443', 'certificate': 'file/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'eu-west-1', 'context': 'project-49ce1150-besu-cluster', 'config_file': '/home/ubuntu/.kube/config'}, 'vault': {'url': 'http://127.0.0.1:9000', 'root_token': 's.NQN6bn4oN7ScNuLnwxB7USgx', 'secret_path': 'secret'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'https://github.com/hwcho/bevel.git', 'branch': 'develop', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/hwcho/bevel.git', 'username': 'hwcho', 'password': 'git_access_token', 'email': 'hyewoncho17@gmail.com', 'private_key': '/home/ubuntu/gitops/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=US/ST=New York/L=New York/O=Store/CN=ca.store-net.org3ambassador.blockchaincloudpoc.com', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.store-net:7051', 'peerAddress': 'peer0.store-net.org3ambassador.blockchaincloudpoc.com:8443', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'chaincode_name', 'version': '1', 'maindirectory': 'chaincode_main', 'lang': 'golang', 'repository': {'username': 'hwcho', 'password': 'git_access_token', 'url': 'github.com/hwcho/bevel.git', 'branch': 'develop', 'path': 'chaincode_src'}, 'arguments': 'chaincode_args', 'endorsements': ''}}]}}) 
skipping: [localhost] => (item={'organization': None, 'name': 'warehouse', 'country': 'US', 'state': 'Massachusetts', 'location': 'Boston', 'subject': 'O=Warehouse,OU=Warehouse,L=42.36/-71.06/Boston,C=US', 'type': 'peer', 'external_url_suffix': 'org2ambassador.blockchaincloudpoc.com', 'org_status': 'new', 'fabric_console': 'disabled', 'ca_data': {'url': 'ca.warehouse-net.org2ambassador.blockchaincloudpoc.com:8443', 'certificate': '/file/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'eu-west-1', 'context': 'project-49ce1150-besu-cluster', 'config_file': '/home/ubuntu/.kube/config'}, 'vault': {'url': 'http://127.0.0.1:9000', 'root_token': 's.NQN6bn4oN7ScNuLnwxB7USgx', 'secret_path': 'secret'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'https://github.com/hwcho/bevel.git', 'branch': 'develop', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/hwcho/bevel.git', 'username': 'hwcho', 'password': 'git_access_token', 'email': 'hyewoncho17@gmail.com', 'private_key': '/home/ubuntu/gitops/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=US/ST=Massachusetts/L=Boston/O=Warehouse/CN=ca.warehouse-net.org2ambassador.blockchaincloudpoc.com', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.warehouse-net:7051', 'peerAddress': 'peer0.warehouse-net.org3ambassador.blockchaincloudpoc.com:8443', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'chaincode_name', 'version': '1', 'maindirectory': 'chaincode_main', 'lang': 'golang', 'repository': {'username': 'hwcho', 'password': 'git_access_token', 'url': 'github.com/hwcho/bevel.git', 'branch': 'develop', 'path': 'chaincode_src'}, 'arguments': 'chaincode_args', 'endorsements': ''}}]}}) 

PLAY [ansible_provisioners] ****************************************************

TASK [include_role : setup/flux] ***********************************************

TASK [aws-cli : register temporary directory] **********************************
skipping: [localhost]

TASK [aws-cli : check aws cli] *************************************************
skipping: [localhost]

TASK [aws-cli : download aws cli] **********************************************
skipping: [localhost]

TASK [aws-cli : extract aws cli] ***********************************************
skipping: [localhost]

TASK [create bin directory] ****************************************************
skipping: [localhost]

TASK [aws-cli : install aws cli] ***********************************************
skipping: [localhost]

TASK [aws-cli : configuring aws] ***********************************************
skipping: [localhost]

TASK [aws-auth : register temporary directory] *********************************
skipping: [localhost]

TASK [aws-auth : check aws-authenticator] **************************************
skipping: [localhost]

TASK [aws-auth : create bin directory] *****************************************
skipping: [localhost]

TASK [aws-auth : Install aws-authenticator] ************************************
skipping: [localhost]

TASK [aws-auth : Test Kubernetes connection] ***********************************
skipping: [localhost]

TASK [helm : register temporary directory] *************************************
changed: [localhost]

TASK [helm : check helm] *******************************************************
ok: [localhost]

TASK [helm : Install helm] *****************************************************
skipping: [localhost]

TASK [helm : Unzip helm archive] ***********************************************
skipping: [localhost]

TASK [create bin directory] ****************************************************
skipping: [localhost]

TASK [helm : Move helm binaries] ***********************************************
skipping: [localhost] => (item=helm) 

TASK [helm : Test helm installation] *******************************************
ok: [localhost]

TASK [kubectl : register temporary directory] **********************************
changed: [localhost]

TASK [kubectl : check kubectl] *************************************************
ok: [localhost]

TASK [kubectl : Download kubectl binary] ***************************************
skipping: [localhost]

TASK [kubectl : Unarchive kubernetes-client] ***********************************
skipping: [localhost]

TASK [kubectl : create bin directory] ******************************************
skipping: [localhost]

TASK [kubectl : Copy kubectl binary to destination directory] ******************
skipping: [localhost] => (item=kubectl) 

TASK [kubectl : Test kubectl installation] *************************************
ok: [localhost]

TASK [kubectl : Changing the current context namespace to default] *************
changed: [localhost]

TASK [setup/flux : Checking if the namespace flux-dev already exists] **********
ok: [localhost]

TASK [setup/flux : Create namespaces  flux-dev] ********************************
skipping: [localhost]

TASK [setup/flux : Check if Flux is running] ***********************************
ok: [localhost]

TASK [setup/flux : Get ssh known hosts] ****************************************
skipping: [localhost]

TASK [setup/flux : Helm repo add] **********************************************
skipping: [localhost]

TASK [setup/flux : Install flux for over https connection] *********************
skipping: [localhost]

TASK [setup/flux : Install flux for over ssh connection] ***********************
skipping: [localhost]

TASK [wait for pods to come up] ************************************************
skipping: [localhost]

TASK [aws-cli : register temporary directory] **********************************
skipping: [localhost]

TASK [aws-cli : check aws cli] *************************************************
skipping: [localhost]

TASK [aws-cli : download aws cli] **********************************************
skipping: [localhost]

TASK [aws-cli : extract aws cli] ***********************************************
skipping: [localhost]

TASK [create bin directory] ****************************************************
skipping: [localhost]

TASK [aws-cli : install aws cli] ***********************************************
skipping: [localhost]

TASK [aws-cli : configuring aws] ***********************************************
skipping: [localhost]

TASK [aws-auth : register temporary directory] *********************************
skipping: [localhost]

TASK [aws-auth : check aws-authenticator] **************************************
skipping: [localhost]

TASK [aws-auth : create bin directory] *****************************************
skipping: [localhost]

TASK [aws-auth : Install aws-authenticator] ************************************
skipping: [localhost]

TASK [aws-auth : Test Kubernetes connection] ***********************************
skipping: [localhost]

TASK [setup/flux : Checking if the namespace flux-dev already exists] **********
ok: [localhost]

TASK [setup/flux : Create namespaces  flux-dev] ********************************
skipping: [localhost]

TASK [setup/flux : Check if Flux is running] ***********************************
ok: [localhost]

TASK [setup/flux : Get ssh known hosts] ****************************************
skipping: [localhost]

TASK [setup/flux : Helm repo add] **********************************************
skipping: [localhost]

TASK [setup/flux : Install flux for over https connection] *********************
skipping: [localhost]

TASK [setup/flux : Install flux for over ssh connection] ***********************
skipping: [localhost]

TASK [wait for pods to come up] ************************************************
skipping: [localhost]

TASK [aws-cli : register temporary directory] **********************************
skipping: [localhost]

TASK [aws-cli : check aws cli] *************************************************
skipping: [localhost]

TASK [aws-cli : download aws cli] **********************************************
skipping: [localhost]

TASK [aws-cli : extract aws cli] ***********************************************
skipping: [localhost]

TASK [create bin directory] ****************************************************
skipping: [localhost]

TASK [aws-cli : install aws cli] ***********************************************
skipping: [localhost]

TASK [aws-cli : configuring aws] ***********************************************
skipping: [localhost]

TASK [aws-auth : register temporary directory] *********************************
skipping: [localhost]

TASK [aws-auth : check aws-authenticator] **************************************
skipping: [localhost]

TASK [aws-auth : create bin directory] *****************************************
skipping: [localhost]

TASK [aws-auth : Install aws-authenticator] ************************************
skipping: [localhost]

TASK [aws-auth : Test Kubernetes connection] ***********************************
skipping: [localhost]

TASK [setup/flux : Checking if the namespace flux-dev already exists] **********
ok: [localhost]

TASK [setup/flux : Create namespaces  flux-dev] ********************************
skipping: [localhost]

TASK [setup/flux : Check if Flux is running] ***********************************
ok: [localhost]

TASK [setup/flux : Get ssh known hosts] ****************************************
skipping: [localhost]

TASK [setup/flux : Helm repo add] **********************************************
skipping: [localhost]

TASK [setup/flux : Install flux for over https connection] *********************
skipping: [localhost]

TASK [setup/flux : Install flux for over ssh connection] ***********************
skipping: [localhost]

TASK [wait for pods to come up] ************************************************
skipping: [localhost]

TASK [aws-cli : register temporary directory] **********************************
skipping: [localhost]

TASK [aws-cli : check aws cli] *************************************************
skipping: [localhost]

TASK [aws-cli : download aws cli] **********************************************
skipping: [localhost]

TASK [aws-cli : extract aws cli] ***********************************************
skipping: [localhost]

TASK [create bin directory] ****************************************************
skipping: [localhost]

TASK [aws-cli : install aws cli] ***********************************************
skipping: [localhost]

TASK [aws-cli : configuring aws] ***********************************************
skipping: [localhost]

TASK [aws-auth : register temporary directory] *********************************
skipping: [localhost]

TASK [aws-auth : check aws-authenticator] **************************************
skipping: [localhost]

TASK [aws-auth : create bin directory] *****************************************
skipping: [localhost]

TASK [aws-auth : Install aws-authenticator] ************************************
skipping: [localhost]

TASK [aws-auth : Test Kubernetes connection] ***********************************
skipping: [localhost]

TASK [setup/flux : Checking if the namespace flux-dev already exists] **********
ok: [localhost]

TASK [setup/flux : Create namespaces  flux-dev] ********************************
skipping: [localhost]

TASK [setup/flux : Check if Flux is running] ***********************************
ok: [localhost]

TASK [setup/flux : Get ssh known hosts] ****************************************
skipping: [localhost]

TASK [setup/flux : Helm repo add] **********************************************
skipping: [localhost]

TASK [setup/flux : Install flux for over https connection] *********************
skipping: [localhost]

TASK [setup/flux : Install flux for over ssh connection] ***********************
skipping: [localhost]

TASK [wait for pods to come up] ************************************************
skipping: [localhost]

TASK [aws-cli : register temporary directory] **********************************
skipping: [localhost]

TASK [aws-cli : check aws cli] *************************************************
skipping: [localhost]

TASK [aws-cli : download aws cli] **********************************************
skipping: [localhost]

TASK [aws-cli : extract aws cli] ***********************************************
skipping: [localhost]

TASK [create bin directory] ****************************************************
skipping: [localhost]

TASK [aws-cli : install aws cli] ***********************************************
skipping: [localhost]

TASK [aws-cli : configuring aws] ***********************************************
skipping: [localhost]

TASK [aws-auth : register temporary directory] *********************************
skipping: [localhost]

TASK [aws-auth : check aws-authenticator] **************************************
skipping: [localhost]

TASK [aws-auth : create bin directory] *****************************************
skipping: [localhost]

TASK [aws-auth : Install aws-authenticator] ************************************
skipping: [localhost]

TASK [aws-auth : Test Kubernetes connection] ***********************************
skipping: [localhost]

TASK [setup/flux : Checking if the namespace flux-dev already exists] **********
ok: [localhost]

TASK [setup/flux : Create namespaces  flux-dev] ********************************
skipping: [localhost]

TASK [setup/flux : Check if Flux is running] ***********************************
ok: [localhost]

TASK [setup/flux : Get ssh known hosts] ****************************************
skipping: [localhost]

TASK [setup/flux : Helm repo add] **********************************************
skipping: [localhost]

TASK [setup/flux : Install flux for over https connection] *********************
skipping: [localhost]

TASK [setup/flux : Install flux for over ssh connection] ***********************
skipping: [localhost]

TASK [wait for pods to come up] ************************************************
skipping: [localhost]

TASK [Prepare nodes and clients ports for ambassador] **************************
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'org1ambassador.blockchaincloudpoc.com', 'org_status': 'new', 'fabric_console': 'enabled', 'ca_data': {'url': 'ca.supplychain-net.org1ambassador.blockchaincloudpoc.com:8443', 'certificate': 'file/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'eu-west-1', 'context': 'project-49ce1150-besu-cluster', 'config_file': '/home/ubuntu/.kube/config'}, 'vault': {'url': 'http://127.0.0.1:9000', 'root_token': 's.NQN6bn4oN7ScNuLnwxB7USgx', 'secret_path': 'secret'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'https://github.com/hwcho/bevel.git', 'branch': 'develop', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/hwcho/bevel.git', 'username': 'hwcho', 'password': 'git_access_token', 'email': 'hyewoncho17@gmail.com', 'private_key': '/home/ubuntu/gitops/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net.org1ambassador.blockchaincloudpoc.com', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'kafka', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'kafka', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'kafka', 'grpc': {'port': 7050}}]}}) 
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'peer', 'external_url_suffix': 'org2ambassador.blockchaincloudpoc.com', 'org_status': 'new', 'fabric_console': 'enabled', 'ca_data': {'url': 'ca.manufacturer-net.org2ambassador.blockchaincloudpoc.com:8443', 'certificate': 'file/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'eu-west-1', 'context': 'project-49ce1150-besu-cluster', 'config_file': '/home/ubuntu/.kube/config'}, 'vault': {'url': 'http://127.0.0.1:9000', 'root_token': 's.NQN6bn4oN7ScNuLnwxB7USgx', 'secret_path': 'secret'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'https://github.com/hwcho/bevel.git', 'branch': 'develop', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/hwcho/bevel.git', 'username': 'hwcho', 'password': 'git_access_token', 'email': 'hyewoncho17@gmail.com', 'private_key': '/home/ubuntu/gitops/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net.org2ambassador.blockchaincloudpoc.com', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net.org3ambassador.blockchaincloudpoc.com:8443', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'chaincode_name', 'version': '1', 'maindirectory': 'chaincode_main', 'lang': 'golang', 'repository': {'username': 'hwcho', 'password': 'git_access_token', 'url': 'github.com/hwcho/bevel.git', 'branch': 'develop', 'path': 'chaincode_src'}, 'arguments': 'chaincode_args', 'endorsements': ''}}]}}) 
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'org3ambassador.blockchaincloudpoc.com', 'org_status': 'new', 'fabric_console': 'disabled', 'ca_data': {'url': 'ca.carrier-net.org3ambassador.blockchaincloudpoc.com:8443', 'certificate': 'file/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'eu-west-1', 'context': 'project-49ce1150-besu-cluster', 'config_file': '/home/ubuntu/.kube/config'}, 'vault': {'url': 'http://127.0.0.1:9000', 'root_token': 's.NQN6bn4oN7ScNuLnwxB7USgx', 'secret_path': 'secret'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'https://github.com/hwcho/bevel.git', 'branch': 'develop', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/hwcho/bevel.git', 'username': 'hwcho', 'password': 'git_access_token', 'email': 'hyewoncho17@gmail.com', 'private_key': '/home/ubuntu/gitops/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net.org3ambassador.blockchaincloudpoc.com', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.org3ambassador.blockchaincloudpoc.com:8443', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'chaincode_name', 'version': '1', 'maindirectory': 'chaincode_main', 'lang': 'golang', 'repository': {'username': 'hwcho', 'password': 'git_access_token', 'url': 'github.com/hwcho/bevel.git', 'branch': 'develop', 'path': 'chaincode_src'}, 'arguments': 'chaincode_args', 'endorsements': ''}}]}}) 
skipping: [localhost] => (item={'organization': None, 'name': 'store', 'country': 'US', 'state': 'New York', 'location': 'New York', 'subject': 'O=Store,OU=Store,L=40.73/-74/New York,C=US', 'type': 'peer', 'external_url_suffix': 'org3ambassador.blockchaincloudpoc.com', 'org_status': 'new', 'fabric_console': 'disabled', 'ca_data': {'url': 'ca.store-net.org3ambassador.blockchaincloudpoc.com:8443', 'certificate': 'file/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'eu-west-1', 'context': 'project-49ce1150-besu-cluster', 'config_file': '/home/ubuntu/.kube/config'}, 'vault': {'url': 'http://127.0.0.1:9000', 'root_token': 's.NQN6bn4oN7ScNuLnwxB7USgx', 'secret_path': 'secret'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'https://github.com/hwcho/bevel.git', 'branch': 'develop', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/hwcho/bevel.git', 'username': 'hwcho', 'password': 'git_access_token', 'email': 'hyewoncho17@gmail.com', 'private_key': '/home/ubuntu/gitops/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=US/ST=New York/L=New York/O=Store/CN=ca.store-net.org3ambassador.blockchaincloudpoc.com', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.store-net:7051', 'peerAddress': 'peer0.store-net.org3ambassador.blockchaincloudpoc.com:8443', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'chaincode_name', 'version': '1', 'maindirectory': 'chaincode_main', 'lang': 'golang', 'repository': {'username': 'hwcho', 'password': 'git_access_token', 'url': 'github.com/hwcho/bevel.git', 'branch': 'develop', 'path': 'chaincode_src'}, 'arguments': 'chaincode_args', 'endorsements': ''}}]}}) 
skipping: [localhost] => (item={'organization': None, 'name': 'warehouse', 'country': 'US', 'state': 'Massachusetts', 'location': 'Boston', 'subject': 'O=Warehouse,OU=Warehouse,L=42.36/-71.06/Boston,C=US', 'type': 'peer', 'external_url_suffix': 'org2ambassador.blockchaincloudpoc.com', 'org_status': 'new', 'fabric_console': 'disabled', 'ca_data': {'url': 'ca.warehouse-net.org2ambassador.blockchaincloudpoc.com:8443', 'certificate': '/file/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'eu-west-1', 'context': 'project-49ce1150-besu-cluster', 'config_file': '/home/ubuntu/.kube/config'}, 'vault': {'url': 'http://127.0.0.1:9000', 'root_token': 's.NQN6bn4oN7ScNuLnwxB7USgx', 'secret_path': 'secret'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'https://github.com/hwcho/bevel.git', 'branch': 'develop', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/hwcho/bevel.git', 'username': 'hwcho', 'password': 'git_access_token', 'email': 'hyewoncho17@gmail.com', 'private_key': '/home/ubuntu/gitops/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=US/ST=Massachusetts/L=Boston/O=Warehouse/CN=ca.warehouse-net.org2ambassador.blockchaincloudpoc.com', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.warehouse-net:7051', 'peerAddress': 'peer0.warehouse-net.org3ambassador.blockchaincloudpoc.com:8443', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'chaincode_name', 'version': '1', 'maindirectory': 'chaincode_main', 'lang': 'golang', 'repository': {'username': 'hwcho', 'password': 'git_access_token', 'url': 'github.com/hwcho/bevel.git', 'branch': 'develop', 'path': 'chaincode_src'}, 'arguments': 'chaincode_args', 'endorsements': ''}}]}}) 

TASK [include_role : setup/ambassador] *****************************************
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'org1ambassador.blockchaincloudpoc.com', 'org_status': 'new', 'fabric_console': 'enabled', 'ca_data': {'url': 'ca.supplychain-net.org1ambassador.blockchaincloudpoc.com:8443', 'certificate': 'file/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'eu-west-1', 'context': 'project-49ce1150-besu-cluster', 'config_file': '/home/ubuntu/.kube/config'}, 'vault': {'url': 'http://127.0.0.1:9000', 'root_token': 's.NQN6bn4oN7ScNuLnwxB7USgx', 'secret_path': 'secret'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'https://github.com/hwcho/bevel.git', 'branch': 'develop', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/hwcho/bevel.git', 'username': 'hwcho', 'password': 'git_access_token', 'email': 'hyewoncho17@gmail.com', 'private_key': '/home/ubuntu/gitops/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net.org1ambassador.blockchaincloudpoc.com', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'kafka', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'kafka', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'kafka', 'grpc': {'port': 7050}}]}}) 
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'peer', 'external_url_suffix': 'org2ambassador.blockchaincloudpoc.com', 'org_status': 'new', 'fabric_console': 'enabled', 'ca_data': {'url': 'ca.manufacturer-net.org2ambassador.blockchaincloudpoc.com:8443', 'certificate': 'file/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'eu-west-1', 'context': 'project-49ce1150-besu-cluster', 'config_file': '/home/ubuntu/.kube/config'}, 'vault': {'url': 'http://127.0.0.1:9000', 'root_token': 's.NQN6bn4oN7ScNuLnwxB7USgx', 'secret_path': 'secret'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'https://github.com/hwcho/bevel.git', 'branch': 'develop', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/hwcho/bevel.git', 'username': 'hwcho', 'password': 'git_access_token', 'email': 'hyewoncho17@gmail.com', 'private_key': '/home/ubuntu/gitops/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net.org2ambassador.blockchaincloudpoc.com', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net.org3ambassador.blockchaincloudpoc.com:8443', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'chaincode_name', 'version': '1', 'maindirectory': 'chaincode_main', 'lang': 'golang', 'repository': {'username': 'hwcho', 'password': 'git_access_token', 'url': 'github.com/hwcho/bevel.git', 'branch': 'develop', 'path': 'chaincode_src'}, 'arguments': 'chaincode_args', 'endorsements': ''}}]}}) 
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'org3ambassador.blockchaincloudpoc.com', 'org_status': 'new', 'fabric_console': 'disabled', 'ca_data': {'url': 'ca.carrier-net.org3ambassador.blockchaincloudpoc.com:8443', 'certificate': 'file/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'eu-west-1', 'context': 'project-49ce1150-besu-cluster', 'config_file': '/home/ubuntu/.kube/config'}, 'vault': {'url': 'http://127.0.0.1:9000', 'root_token': 's.NQN6bn4oN7ScNuLnwxB7USgx', 'secret_path': 'secret'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'https://github.com/hwcho/bevel.git', 'branch': 'develop', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/hwcho/bevel.git', 'username': 'hwcho', 'password': 'git_access_token', 'email': 'hyewoncho17@gmail.com', 'private_key': '/home/ubuntu/gitops/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net.org3ambassador.blockchaincloudpoc.com', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.org3ambassador.blockchaincloudpoc.com:8443', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'chaincode_name', 'version': '1', 'maindirectory': 'chaincode_main', 'lang': 'golang', 'repository': {'username': 'hwcho', 'password': 'git_access_token', 'url': 'github.com/hwcho/bevel.git', 'branch': 'develop', 'path': 'chaincode_src'}, 'arguments': 'chaincode_args', 'endorsements': ''}}]}}) 
skipping: [localhost] => (item={'organization': None, 'name': 'store', 'country': 'US', 'state': 'New York', 'location': 'New York', 'subject': 'O=Store,OU=Store,L=40.73/-74/New York,C=US', 'type': 'peer', 'external_url_suffix': 'org3ambassador.blockchaincloudpoc.com', 'org_status': 'new', 'fabric_console': 'disabled', 'ca_data': {'url': 'ca.store-net.org3ambassador.blockchaincloudpoc.com:8443', 'certificate': 'file/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'eu-west-1', 'context': 'project-49ce1150-besu-cluster', 'config_file': '/home/ubuntu/.kube/config'}, 'vault': {'url': 'http://127.0.0.1:9000', 'root_token': 's.NQN6bn4oN7ScNuLnwxB7USgx', 'secret_path': 'secret'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'https://github.com/hwcho/bevel.git', 'branch': 'develop', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/hwcho/bevel.git', 'username': 'hwcho', 'password': 'git_access_token', 'email': 'hyewoncho17@gmail.com', 'private_key': '/home/ubuntu/gitops/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=US/ST=New York/L=New York/O=Store/CN=ca.store-net.org3ambassador.blockchaincloudpoc.com', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.store-net:7051', 'peerAddress': 'peer0.store-net.org3ambassador.blockchaincloudpoc.com:8443', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'chaincode_name', 'version': '1', 'maindirectory': 'chaincode_main', 'lang': 'golang', 'repository': {'username': 'hwcho', 'password': 'git_access_token', 'url': 'github.com/hwcho/bevel.git', 'branch': 'develop', 'path': 'chaincode_src'}, 'arguments': 'chaincode_args', 'endorsements': ''}}]}}) 
skipping: [localhost] => (item={'organization': None, 'name': 'warehouse', 'country': 'US', 'state': 'Massachusetts', 'location': 'Boston', 'subject': 'O=Warehouse,OU=Warehouse,L=42.36/-71.06/Boston,C=US', 'type': 'peer', 'external_url_suffix': 'org2ambassador.blockchaincloudpoc.com', 'org_status': 'new', 'fabric_console': 'disabled', 'ca_data': {'url': 'ca.warehouse-net.org2ambassador.blockchaincloudpoc.com:8443', 'certificate': '/file/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'eu-west-1', 'context': 'project-49ce1150-besu-cluster', 'config_file': '/home/ubuntu/.kube/config'}, 'vault': {'url': 'http://127.0.0.1:9000', 'root_token': 's.NQN6bn4oN7ScNuLnwxB7USgx', 'secret_path': 'secret'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'https://github.com/hwcho/bevel.git', 'branch': 'develop', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/hwcho/bevel.git', 'username': 'hwcho', 'password': 'git_access_token', 'email': 'hyewoncho17@gmail.com', 'private_key': '/home/ubuntu/gitops/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=US/ST=Massachusetts/L=Boston/O=Warehouse/CN=ca.warehouse-net.org2ambassador.blockchaincloudpoc.com', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.warehouse-net:7051', 'peerAddress': 'peer0.warehouse-net.org3ambassador.blockchaincloudpoc.com:8443', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'chaincode_name', 'version': '1', 'maindirectory': 'chaincode_main', 'lang': 'golang', 'repository': {'username': 'hwcho', 'password': 'git_access_token', 'url': 'github.com/hwcho/bevel.git', 'branch': 'develop', 'path': 'chaincode_src'}, 'arguments': 'chaincode_args', 'endorsements': ''}}]}}) 

TASK [include_role : setup/haproxy-ingress] ************************************
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'org1ambassador.blockchaincloudpoc.com', 'org_status': 'new', 'fabric_console': 'enabled', 'ca_data': {'url': 'ca.supplychain-net.org1ambassador.blockchaincloudpoc.com:8443', 'certificate': 'file/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'eu-west-1', 'context': 'project-49ce1150-besu-cluster', 'config_file': '/home/ubuntu/.kube/config'}, 'vault': {'url': 'http://127.0.0.1:9000', 'root_token': 's.NQN6bn4oN7ScNuLnwxB7USgx', 'secret_path': 'secret'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'https://github.com/hwcho/bevel.git', 'branch': 'develop', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/hwcho/bevel.git', 'username': 'hwcho', 'password': 'git_access_token', 'email': 'hyewoncho17@gmail.com', 'private_key': '/home/ubuntu/gitops/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net.org1ambassador.blockchaincloudpoc.com', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'kafka', 'type': 'broker', 'replicas': 4, 'grpc': {'port': 9092}}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'kafka', 'grpc': {'port': 7050}}, {'orderer': None, 'name': 'orderer2', 'type': 'orderer', 'consensus': 'kafka', 'grpc': {'port': 7050}}]}}) 
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'peer', 'external_url_suffix': 'org2ambassador.blockchaincloudpoc.com', 'org_status': 'new', 'fabric_console': 'enabled', 'ca_data': {'url': 'ca.manufacturer-net.org2ambassador.blockchaincloudpoc.com:8443', 'certificate': 'file/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'eu-west-1', 'context': 'project-49ce1150-besu-cluster', 'config_file': '/home/ubuntu/.kube/config'}, 'vault': {'url': 'http://127.0.0.1:9000', 'root_token': 's.NQN6bn4oN7ScNuLnwxB7USgx', 'secret_path': 'secret'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'https://github.com/hwcho/bevel.git', 'branch': 'develop', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/hwcho/bevel.git', 'username': 'hwcho', 'password': 'git_access_token', 'email': 'hyewoncho17@gmail.com', 'private_key': '/home/ubuntu/gitops/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net.org2ambassador.blockchaincloudpoc.com', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net.org3ambassador.blockchaincloudpoc.com:8443', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'chaincode_name', 'version': '1', 'maindirectory': 'chaincode_main', 'lang': 'golang', 'repository': {'username': 'hwcho', 'password': 'git_access_token', 'url': 'github.com/hwcho/bevel.git', 'branch': 'develop', 'path': 'chaincode_src'}, 'arguments': 'chaincode_args', 'endorsements': ''}}]}}) 
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'org3ambassador.blockchaincloudpoc.com', 'org_status': 'new', 'fabric_console': 'disabled', 'ca_data': {'url': 'ca.carrier-net.org3ambassador.blockchaincloudpoc.com:8443', 'certificate': 'file/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'eu-west-1', 'context': 'project-49ce1150-besu-cluster', 'config_file': '/home/ubuntu/.kube/config'}, 'vault': {'url': 'http://127.0.0.1:9000', 'root_token': 's.NQN6bn4oN7ScNuLnwxB7USgx', 'secret_path': 'secret'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'https://github.com/hwcho/bevel.git', 'branch': 'develop', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/hwcho/bevel.git', 'username': 'hwcho', 'password': 'git_access_token', 'email': 'hyewoncho17@gmail.com', 'private_key': '/home/ubuntu/gitops/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net.org3ambassador.blockchaincloudpoc.com', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net.org3ambassador.blockchaincloudpoc.com:8443', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'chaincode_name', 'version': '1', 'maindirectory': 'chaincode_main', 'lang': 'golang', 'repository': {'username': 'hwcho', 'password': 'git_access_token', 'url': 'github.com/hwcho/bevel.git', 'branch': 'develop', 'path': 'chaincode_src'}, 'arguments': 'chaincode_args', 'endorsements': ''}}]}}) 
skipping: [localhost] => (item={'organization': None, 'name': 'store', 'country': 'US', 'state': 'New York', 'location': 'New York', 'subject': 'O=Store,OU=Store,L=40.73/-74/New York,C=US', 'type': 'peer', 'external_url_suffix': 'org3ambassador.blockchaincloudpoc.com', 'org_status': 'new', 'fabric_console': 'disabled', 'ca_data': {'url': 'ca.store-net.org3ambassador.blockchaincloudpoc.com:8443', 'certificate': 'file/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'eu-west-1', 'context': 'project-49ce1150-besu-cluster', 'config_file': '/home/ubuntu/.kube/config'}, 'vault': {'url': 'http://127.0.0.1:9000', 'root_token': 's.NQN6bn4oN7ScNuLnwxB7USgx', 'secret_path': 'secret'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'https://github.com/hwcho/bevel.git', 'branch': 'develop', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/hwcho/bevel.git', 'username': 'hwcho', 'password': 'git_access_token', 'email': 'hyewoncho17@gmail.com', 'private_key': '/home/ubuntu/gitops/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=US/ST=New York/L=New York/O=Store/CN=ca.store-net.org3ambassador.blockchaincloudpoc.com', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.store-net:7051', 'peerAddress': 'peer0.store-net.org3ambassador.blockchaincloudpoc.com:8443', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'chaincode_name', 'version': '1', 'maindirectory': 'chaincode_main', 'lang': 'golang', 'repository': {'username': 'hwcho', 'password': 'git_access_token', 'url': 'github.com/hwcho/bevel.git', 'branch': 'develop', 'path': 'chaincode_src'}, 'arguments': 'chaincode_args', 'endorsements': ''}}]}}) 
skipping: [localhost] => (item={'organization': None, 'name': 'warehouse', 'country': 'US', 'state': 'Massachusetts', 'location': 'Boston', 'subject': 'O=Warehouse,OU=Warehouse,L=42.36/-71.06/Boston,C=US', 'type': 'peer', 'external_url_suffix': 'org2ambassador.blockchaincloudpoc.com', 'org_status': 'new', 'fabric_console': 'disabled', 'ca_data': {'url': 'ca.warehouse-net.org2ambassador.blockchaincloudpoc.com:8443', 'certificate': '/file/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': 'eu-west-1', 'context': 'project-49ce1150-besu-cluster', 'config_file': '/home/ubuntu/.kube/config'}, 'vault': {'url': 'http://127.0.0.1:9000', 'root_token': 's.NQN6bn4oN7ScNuLnwxB7USgx', 'secret_path': 'secret'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'https://github.com/hwcho/bevel.git', 'branch': 'develop', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/hwcho/bevel.git', 'username': 'hwcho', 'password': 'git_access_token', 'email': 'hyewoncho17@gmail.com', 'private_key': '/home/ubuntu/gitops/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=US/ST=Massachusetts/L=Boston/O=Warehouse/CN=ca.warehouse-net.org2ambassador.blockchaincloudpoc.com', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.warehouse-net:7051', 'peerAddress': 'peer0.warehouse-net.org3ambassador.blockchaincloudpoc.com:8443', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'chaincode_name', 'version': '1', 'maindirectory': 'chaincode_main', 'lang': 'golang', 'repository': {'username': 'hwcho', 'password': 'git_access_token', 'url': 'github.com/hwcho/bevel.git', 'branch': 'develop', 'path': 'chaincode_src'}, 'arguments': 'chaincode_args', 'endorsements': ''}}]}}) 

PLAY [ansible_provisioners] ****************************************************

TASK [Remove build directory] **************************************************
ok: [localhost]

TASK [Create namespace and Vault auth for each organization] *******************

TASK [Checking if the namespace supplychain-net already exists] ****************

TASK [/home/ubuntu/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace supplychain-net is created] ***
ok: [localhost]

TASK [/home/ubuntu/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace supplychain-net] ***
skipping: [localhost]

TASK [/home/ubuntu/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace supplychain-net is created] ***
skipping: [localhost]

TASK [/home/ubuntu/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace supplychain-net] ***
skipping: [localhost]

TASK [create/namespace_vaultauth : Set Variable] *******************************
ok: [localhost]

TASK [Create namespaces] *******************************************************

TASK [k8_component : Ensures orderer dir exists] *******************************
ok: [localhost]

TASK [k8_component : create namespace file for orderer] ************************
ok: [localhost]

TASK [Create vault reviewer service account for Organizations] *****************

TASK [k8_component : Ensures orderer dir exists] *******************************
ok: [localhost]

TASK [k8_component : create vault-reviewer file for orderer] *******************
ok: [localhost]

TASK [Create vault auth service account for Organizations] *********************

TASK [k8_component : Ensures orderer dir exists] *******************************
ok: [localhost]

TASK [k8_component : create vaultAuth file for orderer] ************************
ok: [localhost]

TASK [Create clusterrolebinding for Ordrers] ***********************************

TASK [k8_component : Ensures orderer dir exists] *******************************
ok: [localhost]

TASK [k8_component : create reviewer_rbac file for orderer] ********************
ok: [localhost]

TASK [Git Push] ****************************************************************

TASK [/home/ubuntu/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/ubuntu/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
ok: [localhost]

TASK [/home/ubuntu/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
